<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="4" total="11" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-31T11:07:01 IST" name="Suite" finished-at="2024-07-31T11:08:56 IST" duration-ms="114960">
    <groups>
      <group name="groupOne">
        <method signature="HomePageTestClass.verifyAllTilesAreDisplayedInHomePage()[pri:1, instance:testClasses.HomePageTestClass@5f9edf14]" name="verifyAllTilesAreDisplayedInHomePage" class="testClasses.HomePageTestClass"/>
        <method signature="HomePageTestClass.verifyRegisterAPatientTileIsClickable()[pri:2, instance:testClasses.HomePageTestClass@5f9edf14]" name="verifyRegisterAPatientTileIsClickable" class="testClasses.HomePageTestClass"/>
        <method signature="LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@76b07f29]" name="verifySuccessfullLogin" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@76b07f29]" name="verifyUnsuccessfulLogin" class="testClasses.LoginTestClass"/>
      </group> <!-- groupOne -->
    </groups>
    <test started-at="2024-07-31T11:07:01 IST" name="Test" finished-at="2024-07-31T11:08:56 IST" duration-ms="114960">
      <class name="testClasses.LoginTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:07:43 IST" name="beforeMethod" finished-at="2024-07-31T11:07:56 IST" duration-ms="12545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:07:56 IST" name="verifySuccessfullLogin" finished-at="2024-07-31T11:08:05 IST" duration-ms="8956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:05 IST" name="afterMethod" finished-at="2024-07-31T11:08:05 IST" duration-ms="309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullLogin status=SUCCESS method=LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@76b07f29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:05 IST" name="beforeMethod" finished-at="2024-07-31T11:08:20 IST" duration-ms="14755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:20 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-07-31T11:08:22 IST" duration-ms="2133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:22 IST" name="afterMethod" finished-at="2024-07-31T11:08:23 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@76b07f29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:23 IST" name="beforeMethod" finished-at="2024-07-31T11:08:35 IST" duration-ms="11971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:35 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-07-31T11:08:36 IST" duration-ms="1514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[addz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:36 IST" name="afterMethod" finished-at="2024-07-31T11:08:36 IST" duration-ms="226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@76b07f29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:36 IST" name="beforeMethod" finished-at="2024-07-31T11:08:53 IST" duration-ms="16431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:53 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-07-31T11:08:56 IST" duration-ms="2999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adMins]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@76b07f29]" started-at="2024-07-31T11:08:56 IST" name="afterMethod" finished-at="2024-07-31T11:08:56 IST" duration-ms="270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@76b07f29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.LoginTestClass -->
      <class name="testClasses.HomePageTestClass">
        <test-method is-config="true" signature="createReport(org.testng.ITestContext)[pri:0, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:01 IST" name="createReport" finished-at="2024-07-31T11:07:01 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@19bfbe28]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:01 IST" name="beforeMethod" finished-at="2024-07-31T11:07:11 IST" duration-ms="10006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAllTilesAreDisplayedInHomePage()[pri:1, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:11 IST" name="verifyAllTilesAreDisplayedInHomePage" finished-at="2024-07-31T11:07:14 IST" duration-ms="3005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllTilesAreDisplayedInHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:14 IST" name="afterMethod" finished-at="2024-07-31T11:07:14 IST" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllTilesAreDisplayedInHomePage status=SUCCESS method=HomePageTestClass.verifyAllTilesAreDisplayedInHomePage()[pri:1, instance:testClasses.HomePageTestClass@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:14 IST" name="beforeMethod" finished-at="2024-07-31T11:07:17 IST" duration-ms="2269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyRegisterAPatientTileIsClickable()[pri:2, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:17 IST" name="verifyRegisterAPatientTileIsClickable" finished-at="2024-07-31T11:07:17 IST" duration-ms="99" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#username"}
  (Session info: chrome=127.0.6533.73)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [20cd1b5e46acdbc53fea5ee30e9d1fdd, findElement {using=id, value=username}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.73, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\iamha\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55245}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55245/devtoo..., se:cdpVersion: 127.0.6533.73, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 20cd1b5e46acdbc53fea5ee30e9d1fdd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#username"}
  (Session info: chrome=127.0.6533.73)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [20cd1b5e46acdbc53fea5ee30e9d1fdd, findElement {using=id, value=username}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.73, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\iamha\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55245}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55245/devtoo..., se:cdpVersion: 127.0.6533.73, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 20cd1b5e46acdbc53fea5ee30e9d1fdd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.sendKeys(Unknown Source)
at utilities.GeneralUtilities.typeOnElement(GeneralUtilities.java:13)
at pageClasses.LoginPageClass.login(LoginPageClass.java:64)
at testClasses.HomePageTestClass.verifyRegisterAPatientTileIsClickable(HomePageTestClass.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAPatientTileIsClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:17 IST" name="afterMethod" finished-at="2024-07-31T11:07:17 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAPatientTileIsClickable status=SKIP method=HomePageTestClass.verifyRegisterAPatientTileIsClickable()[pri:2, instance:testClasses.HomePageTestClass@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:17 IST" name="beforeMethod" finished-at="2024-07-31T11:07:30 IST" duration-ms="12355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyRegisterAPatientTileIsClickable()[pri:2, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:30 IST" name="verifyRegisterAPatientTileIsClickable" finished-at="2024-07-31T11:07:43 IST" duration-ms="13467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAPatientTileIsClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.HomePageTestClass@5f9edf14]" started-at="2024-07-31T11:07:43 IST" name="afterMethod" finished-at="2024-07-31T11:07:43 IST" duration-ms="377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAPatientTileIsClickable status=SUCCESS method=HomePageTestClass.verifyRegisterAPatientTileIsClickable()[pri:2, instance:testClasses.HomePageTestClass@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.HomePageTestClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
